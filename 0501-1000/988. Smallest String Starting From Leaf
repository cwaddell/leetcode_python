# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def smallestFromLeaf(self, root: TreeNode) -> str:
        def dfs(node, path, smallest):
            if not node:
                return
            path = chr(node.val + ord('a')) + path
            if not node.left and not node.right:
                update_smallest(path, smallest)
            else:
                dfs(node.left, path, smallest)
                dfs(node.right, path, smallest)

        def update_smallest(path, smallest):
            current = path
            if not smallest[1] or current < smallest[1]:
                smallest[0] = len(current)
                smallest[1] = current

        smallest = [0, '']
        dfs(root, '', smallest)
        return smallest[1]
